; 任意のオートマトンを表すクラス
+class Automaton()
	; 受理されているならばtrue, 拒否されていればfalse
	+func isAccepted(): bool
		ret false
	end func
	
	; 一文字入力して状態を更新する関数
	+func put(c: char)
	end func
	
	; 自身のクローンを作る関数
	+func clone(): @Automaton
		ret null
	end func
end class

; 特定の一文字からなる文字列を受理するオートマトン
class OneChar(@Automaton)
	+var character: char
	+var state: int
	
	*func ctor()
		do me.character :: '\0'
		do me.state :: 0
	end func
	
	+*func isAccepted(): bool
		ret me.state = 1
	end func
	
	+*func put(c: char)
		do me.state :: me.state = 0 & c = me.character ?(1, 2)
	end func
	
	+*func clone(): @Automaton
		var res: @OneChar :: #@OneChar
		do res.character :: me.character
		ret res
	end func
end class

+func makeOneChar(c: char): @Automaton
	var res: @OneChar :: #@OneChar
	do res.character :: c
	ret res
end func
